<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<!--   Spring OpenID Authentication -->

    <!--<security:global-method-security-->
            <!--secured-annotations="enabled">-->
    <!--</security:global-method-security>-->


    <security:global-method-security
            secured-annotations="enabled">
    </security:global-method-security>

    <security:http>
        <security:logout />
        <security:openid-login
                authentication-failure-handler-ref="authenticationFailureHandler"
                default-target-url="/"
                authentication-success-handler-ref="authenticationSuccessHandler"
                user-service-ref="customUserDetailsService" >

            <security:attribute-exchange identifier-match="https://www.google.com/.*">
                <security:openid-attribute name="axContactEmail" type="http://axschema.org/contact/email"

                                  required="true"/>

                <security:openid-attribute name="oiContactEmail" type="http://schema.openid.net/contact/email"

                                  required="true"/>

                <security:openid-attribute name="axNamePersonFullname" type="http://axschema.org/namePerson"

                                  required="true"/></security:attribute-exchange>

        </security:openid-login>
    </security:http>



    <security:authentication-manager alias="authenticationManager">

        <security:authentication-provider user-service-ref="customUserDetailsService"/>
    </security:authentication-manager>


    <beans:bean id="authenticationFailureHandler"

                class="com.openid.service.impl.CustomFailureHandler">

     <!--    <beans:property name="defaultFailureUrl" value="/access-denied"/>

        <beans:property name="companyInfoURL" value="/register/companyInformation" />
        -->

    </beans:bean>



    <beans:bean id="authenticationSuccessHandler"

                class="com.openid.service.impl.CustomSuccessHandler">

     <!--    <beans:property name="companyInfoURL" value="/register/companyInformation"/> -->

    </beans:bean>


    <beans:bean id="customUserDetailsService"

                class="com.openid.service.impl.CustomUserDetailsService"/>

   <!-- <beans:bean id="facebook"

                class="org.springframework.social.facebook.api.impl.FacebookTemplate"/>-->



    <!-- Spring Social OAuth -->

   <beans:bean id="connectionFactoryLocator" class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
        <property name="connectionFactories">
            <list>
                <beans:bean class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
                    <constructor-arg value="667686176613908" />
                    <constructor-arg value="667686176613908|XbiKIkrfjjZkRjh8G2Nvd4Z3K8k" />
                </beans:bean>
            </list>
        </property>
    </beans:bean>


    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/Users"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>

    </beans:bean>

<!--

    <bean class="org.springframework.social.facebook.connect.FacebookServiceProvider">
        <constructor-arg value="${facebook.appId}" />
        <constructor-arg value="${facebook.appSecret}" />
        <constructor-arg ref="connectionRepository" />
    </bean>
-->



    <!-- DATA SOURCE INITILAIZATION                   -->




<!--
    <beans:bean id="usersConnectionRepository"
          class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository">
        <constructor-arg ref="midDataSource" />
        <constructor-arg ref="connectionFactoryLocator" />
        <constructor-arg ref="textEncryptor" />
    </beans:bean>

    <beans:bean id="connectionRepository" factory-method="createConnectionRepository"
          factory-bean="usersConnectionRepository">
        <constructor-arg value="#{request.getRequestURI().split('/').length > 3 ? request.getRequestURI().split('/')[3] : 'guest'}" />
        &lt;!&ndash;<aop:scoped-proxy proxy-target-class="false" />&ndash;&gt;
    </beans:bean>

    <beans:bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors"
          factory-method="noOpText" />
-->














    <!--  Till here-->


<!--   Spring security Form

    <security:http auto-config="true" use-expressions="true">
        <security:form-login login-page="/login"
        authentication-failure-url="/login?error"/>
        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
        <security:logout logout-success-url="/logout" />
    </security:http>
-->


<!--   <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:user-service>
                <security:user name="akkhil2012"
                               password="12345"
                               authorities="ROLE_USER"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>-->

</beans>